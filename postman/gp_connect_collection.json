{
  "info": {
    "_postman_id": "ea78b45c-c3e5-49d2-93dd-74c7fd2ec58a",
    "name": "GP Connect Record",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "PDS GET Patient",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.sendRequest('https://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.1/jsrsasign-all-min.js', (err, res) => {",
              "  const jwtLib = res.text()",
              "",
              "  let navigator = {} //fake a navigator object for the lib",
              "  let window = {} //fake a window object for the lib",
              "  eval(jwtLib) // This will populate global variable KJUR which is jwt library",
              "  ",
              "  const uuid = require('uuid')",
              "  const jti = uuid.v4()",
              "",
              "  const clientId = pm.environment.get(\"client_id\")",
              "  const kid = pm.environment.get(\"kid\")",
              "  const env = pm.environment.get(\"env\")",
              "  const aud = `https://${env}.api.service.nhs.uk/oauth2/token`",
              "  const privateKey = pm.environment.get(\"rs512_private_key\")",
              "",
              "  const jwt = createJwt(KJUR, jti, clientId, kid, aud, privateKey)",
              "",
              "  const callback = (err, res) => {",
              "    const token = res.json()['access_token']",
              "    pm.environment.set('access_token', token)",
              "  }",
              "  getToken(aud, jwt, clientId, callback)",
              "})",
              "",
              "function getToken(authUrl, jwt, clientId, callback) {",
              "",
              "  const postRequest = {",
              "    url: authUrl,",
              "    method: 'POST',",
              "    body: {",
              "      mode: 'urlencoded',",
              "      urlencoded: [",
              "        {key: 'client_id', value: clientId, disabled: false},",
              "        {key: 'grant_type', value: 'client_credentials', disabled: false},",
              "        {key: 'client_assertion_type', value: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer', disabled: false},",
              "        {key: 'client_assertion', value: jwt, disabled: false}",
              "      ]",
              "    },",
              "  }",
              "  pm.sendRequest(postRequest, callback)",
              "}",
              "",
              "function createJwt(jwtLib, jti, clientId, kid, aud, privateKey) {",
              "  const header = {",
              "    'typ': 'JWT',",
              "    'alg': 'RS512',",
              "    'kid': kid,",
              "  }",
              "",
              "  const data = {",
              "    'iss': clientId,",
              "    'sub': clientId,",
              "    'exp': Math.floor(Date.now() / 1000) + 300,",
              "    'aud': aud,",
              "    'jti': jti",
              "  }",
              "",
              "  const sHeader = JSON.stringify(header)",
              "  const sPayload = JSON.stringify(data)",
              "",
              "  return jwtLib.jws.JWS.sign('RS512', sHeader, sPayload, privateKey)",
              "}",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Get ODS of GP and populate it as environment variable\", () => {",
              "    const ods = getGpOds(pm.response.json())",
              "",
              "    pm.environment.set(\"ods\", ods)",
              "})",
              "",
              "function getGpOds(patient) {",
              "    gp = patient[\"generalPractitioner\"]",
              "    if (!gp) return",
              "",
              "    const odsIds = gp.filter(item => item[\"identifier\"][\"system\"] === \"https://fhir.nhs.uk/Id/ods-organization-code\")",
              "",
              "    return odsIds[0][\"identifier\"][\"value\"] // There must be only one match if any",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "X-Request-ID",
            "value": "{{$guid}}",
            "type": "text"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "https://{{env}}.api.service.nhs.uk/personal-demographics/FHIR/R4/Patient/9691715791",
          "protocol": "https",
          "host": [
            "{{env}}",
            "api",
            "service",
            "nhs",
            "uk"
          ],
          "path": [
            "personal-demographics",
            "FHIR",
            "R4",
            "Patient",
            "9691715791"
          ]
        }
      },
      "response": []
    }
  ]
}
